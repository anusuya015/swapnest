{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer } from './reducers/productReducers';\nimport { productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer } from './reducers/productReducers';\nimport { userLoginReducer } from './reducers/userReducer';\nimport { userRegisterReducer } from './reducers/userReducer';\nimport { emailReducer, userListReducer, userDeleteReducer, userUpdateReducer, userDetailsReducer, userVerificationReducer } from './reducers/userReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  userLogin: userLoginReducer,\n  userVerification: userVerificationReducer,\n  userRegister: userRegisterReducer,\n  emailReducer: emailReducer,\n  usersList: userListReducer,\n  userDelete: userDeleteReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  userUpdate: userUpdateReducer,\n  userDetails: userDetailsReducer\n});\nconst userDataFromStorage = localStorage.getItem('userData') ? JSON.parse(localStorage.getItem('userData')) : null;\nconst middleware = [thunk];\nconst initialState = {\n  userLogin: {\n    userData: userDataFromStorage\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","userLoginReducer","userRegisterReducer","emailReducer","userListReducer","userDeleteReducer","userUpdateReducer","userDetailsReducer","userVerificationReducer","reducer","productList","productDetails","userLogin","userVerification","userRegister","usersList","userDelete","productDelete","productCreate","productUpdate","productReviewCreate","userUpdate","userDetails","userDataFromStorage","localStorage","getItem","JSON","parse","middleware","initialState","userData","store"],"sources":["/workspaces/secondhandgoodsmarketplace/Frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer } from './reducers/productReducers'\nimport {\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n} from './reducers/productReducers'\nimport { userLoginReducer } from './reducers/userReducer'\nimport { userRegisterReducer } from './reducers/userReducer'\nimport {\n  emailReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n  userDetailsReducer,\n  userVerificationReducer,\n} from './reducers/userReducer'\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  userLogin: userLoginReducer,\n  userVerification: userVerificationReducer,\n  userRegister: userRegisterReducer,\n  emailReducer: emailReducer,\n  usersList: userListReducer,\n  userDelete: userDeleteReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  userUpdate: userUpdateReducer,\n  userDetails: userDetailsReducer,\n})\n\nconst userDataFromStorage = localStorage.getItem('userData')\n  ? JSON.parse(localStorage.getItem('userData'))\n  : null\n\nconst middleware = [thunk]\nconst initialState = {\n  userLogin: { userData: userDataFromStorage },\n}\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\nexport default store\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,kBAAkB,QAAQ,4BAA4B;AAC/D,SACEC,qBAAqB,EACrBC,oBAAoB,EACpBC,oBAAoB,EACpBC,oBAAoB,EACpBC,0BAA0B,QACrB,4BAA4B;AACnC,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,mBAAmB,QAAQ,wBAAwB;AAC5D,SACEC,YAAY,EACZC,eAAe,EACfC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,uBAAuB,QAClB,wBAAwB;AAC/B,MAAMC,OAAO,GAAGlB,eAAe,CAAC;EAC9BmB,WAAW,EAAEf,kBAAkB;EAC/BgB,cAAc,EAAEf,qBAAqB;EACrCgB,SAAS,EAAEX,gBAAgB;EAC3BY,gBAAgB,EAAEL,uBAAuB;EACzCM,YAAY,EAAEZ,mBAAmB;EACjCC,YAAY,EAAEA,YAAY;EAC1BY,SAAS,EAAEX,eAAe;EAC1BY,UAAU,EAAEX,iBAAiB;EAC7BY,aAAa,EAAEpB,oBAAoB;EACnCqB,aAAa,EAAEpB,oBAAoB;EACnCqB,aAAa,EAAEpB,oBAAoB;EACnCqB,mBAAmB,EAAEpB,0BAA0B;EAC/CqB,UAAU,EAAEf,iBAAiB;EAC7BgB,WAAW,EAAEf;AACf,CAAC,CAAC;AAEF,MAAMgB,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMG,UAAU,GAAG,CAACnC,KAAK,CAAC;AAC1B,MAAMoC,YAAY,GAAG;EACnBjB,SAAS,EAAE;IAAEkB,QAAQ,EAAEP;EAAoB;AAC7C,CAAC;AACD,MAAMQ,KAAK,GAAGzC,WAAW,CACvBmB,OAAO,EACPoB,YAAY,EACZnC,mBAAmB,CAACF,eAAe,CAAC,GAAGoC,UAAU,CAAC,CACpD,CAAC;AACD,eAAeG,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}